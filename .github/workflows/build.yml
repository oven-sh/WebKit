name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  macos-amd64:
    name: macOS amd64
    runs-on: ${{ matrix.os }}
    timeout-minutes: 90
    strategy:
      matrix:
        os: [macos-11]

    steps:
      - uses: actions/checkout@v3
      - name: PATH
        run: |
          echo "/usr/local/opt/llvm@13/bin" >> $GITHUB_PATH
          brew install llvm@13 python icu4c ninja
          brew link llvm@13 --overwrite
      - name: Run
        env:
          ICU_INCLUDE_DIRS: /usr/local/opt/icu4c/include
          CC: "/usr/local/opt/llvm@13/bin/clang"
          CXX: "/usr/local/opt/llvm@13/bin/clang++"
          CMAKE_C_COMPILER: "/usr/local/opt/llvm@13/bin/clang"
          CMAKE_CXX_COMPILER: "/usr/local/opt/llvm@13/bin/clang++"
        run: |
          rm -rf $HOME/runner/webkit-release $HOME/runner/bun-webkit $HOME/runner/bun-webkit $HOME/runner/bun-webkit.tar.gz
          mkdir -p $HOME/runner/webkit-release
          cd $HOME/runner/webkit-release
          cmake  \
            -DPORT="JSCOnly" \
            -DENABLE_STATIC_JSC=ON \
            -DENABLE_SINGLE_THREADED_VM_ENTRY_SCOPE=ON \
            -DCMAKE_BUILD_TYPE=relwithdebuginfo \
            -DUSE_THIN_ARCHIVES=OFF \
            -DENABLE_FTL_JIT=ON \
            -DCMAKE_C_COMPILER=$CMAKE_C_COMPILER \
            -DCMAKE_CXX_COMPILER=$CMAKE_CXX_COMPILER \
            -DCMAKE_C_FLAGS="-fno-exceptions -fvisibility=hidden -fvisibility-inlines-hidden -O3" \
            -DCMAKE_CXX_FLAGS="-fno-exceptions -fvisibility=hidden -fvisibility-inlines-hidden -O3" \
            -G Ninja \
            -DCMAKE_OSX_DEPLOYMENT_TARGET=11.0 \
            -DPTHREAD_JIT_PERMISSIONS_API=1 \
            -DUSE_PTHREAD_JIT_PERMISSIONS_API=ON \
            -DENABLE_REMOTE_INSPECTOR=ON \
            /Users/runner/work/WebKit/WebKit \
            $HOME/runner/webkit-release && \
              cmake --build $HOME/runner/webkit-release --config Release --target jsc
          mkdir -p $HOME/runner/bun-webkit/lib $HOME/runner/bun-webkit/include $HOME/runner/bun-webkit/include/JavaScriptCore $HOME/runner/bun-webkit/include/wtf $HOME/runner/bun-webkit/include/bmalloc
          cp $HOME/runner/webkit-release/lib/* $HOME/runner/bun-webkit/lib
          cp -r $HOME/runner/webkit-release/cmakeconfig.h $HOME/runner/bun-webkit/include/cmakeconfig.h
          cp -r $HOME/runner/webkit-release/WTF/Headers/wtf $HOME/runner/bun-webkit/include
          cp -r $HOME/runner/webkit-release/bmalloc/Headers/bmalloc $HOME/runner/bun-webkit/include
          cp $HOME/runner/webkit-release/JavaScriptCore/Headers/JavaScriptCore/* $HOME/runner/bun-webkit/include/JavaScriptCore
          cp $HOME/runner/webkit-release/JavaScriptCore/PrivateHeaders/JavaScriptCore/* $HOME/runner/bun-webkit/include/JavaScriptCore
          cd $HOME/runner/
          tar -czf bun-webkit.tar.gz bun-webkit
          rm -rf bun-webkit
          cd bun-webkit.tar.gz /tmp
      - uses: actions/upload-artifact@v3
        with:
          name: bun-webkit-macos-amd64
          path: /tmp/bun-webkit.tar.gz
  macos-amd64-lto:
    name: macOS amd64 LTO
    runs-on: ${{ matrix.os }}
    timeout-minutes: 90
    strategy:
      matrix:
        os: [macos-11]

    steps:
      - uses: actions/checkout@v3
      - name: PATH
        run: |
          echo "/usr/local/opt/llvm@13/bin" >> $GITHUB_PATH
          brew install llvm@13 python icu4c ninja
          brew link llvm@13 --overwrite
      - name: Run
        env:
          ICU_INCLUDE_DIRS: /usr/local/opt/icu4c/include
          CC: "/usr/local/opt/llvm@13/bin/clang"
          CXX: "/usr/local/opt/llvm@13/bin/clang++"
          CMAKE_C_COMPILER: "/usr/local/opt/llvm@13/bin/clang"
          CMAKE_CXX_COMPILER: "/usr/local/opt/llvm@13/bin/clang++"
        run: |
          rm -rf $HOME/runner/webkit-release $HOME/runner/bun-webkit $HOME/runner/bun-webkit $HOME/runner/bun-webkit.tar.gz
          mkdir -p $HOME/runner/webkit-release
          cd $HOME/runner/webkit-release
          cmake  \
            -DPORT="JSCOnly" \
            -DENABLE_STATIC_JSC=ON \
            -DENABLE_SINGLE_THREADED_VM_ENTRY_SCOPE=ON \
            -DCMAKE_BUILD_TYPE=relwithdebuginfo \
            -DUSE_THIN_ARCHIVES=OFF \
            -DENABLE_FTL_JIT=ON \
            -DCMAKE_C_COMPILER=$CMAKE_C_COMPILER \
            -DCMAKE_CXX_COMPILER=$CMAKE_CXX_COMPILER \
            -DCMAKE_C_FLAGS="-fno-exceptions -flto='full' -fvisibility=hidden -fvisibility-inlines-hidden -O3" \
            -DCMAKE_CXX_FLAGS="-fno-exceptions -flto='full' -fvisibility=hidden -fvisibility-inlines-hidden -O3" \
            -G Ninja \
            -DCMAKE_OSX_DEPLOYMENT_TARGET=11.0 \
            -DPTHREAD_JIT_PERMISSIONS_API=1 \
            -DUSE_PTHREAD_JIT_PERMISSIONS_API=ON \
            -DENABLE_REMOTE_INSPECTOR=ON \
            /Users/runner/work/WebKit/WebKit \
            $HOME/runner/webkit-release && \
              cmake --build $HOME/runner/webkit-release --config Release --target jsc
          mkdir -p $HOME/runner/bun-webkit/lib $HOME/runner/bun-webkit/include $HOME/runner/bun-webkit/include/JavaScriptCore $HOME/runner/bun-webkit/include/wtf $HOME/runner/bun-webkit/include/bmalloc
          cp $HOME/runner/webkit-release/lib/* $HOME/runner/bun-webkit/lib
          cp -r $HOME/runner/webkit-release/cmakeconfig.h $HOME/runner/bun-webkit/include/cmakeconfig.h
          cp -r $HOME/runner/webkit-release/WTF/Headers/wtf $HOME/runner/bun-webkit/include
          cp -r $HOME/runner/webkit-release/bmalloc/Headers/bmalloc $HOME/runner/bun-webkit/include
          cp $HOME/runner/webkit-release/JavaScriptCore/Headers/JavaScriptCore/* $HOME/runner/bun-webkit/include/JavaScriptCore
          cp $HOME/runner/webkit-release/JavaScriptCore/PrivateHeaders/JavaScriptCore/* $HOME/runner/bun-webkit/include/JavaScriptCore
          cd $HOME/runner/
          tar -czf bun-webkit.tar.gz bun-webkit
          rm -rf bun-webkit
          cd bun-webkit.tar.gz /tmp
      - uses: actions/upload-artifact@v3
        with:
          name: bun-webkit-macos-amd64-lto
          path: /tmp/bun-webkit.tar.gz
  macos-aarch64-lto:
    name: macOS AARCH64 LTO
    runs-on: macOS-arm64
    timeout-minutes: 90
    strategy:
      matrix:
        os: [macos-11]

    steps:
      - uses: actions/checkout@v3
      - name: Run
        env:
          ICU_INCLUDE_DIRS: /opt/homebrew/opt/icu4c/include
          CC: "/opt/homebrew/opt/llvm@13/bin/clang"
          CXX: "/opt/homebrew/opt/llvm@13/bin/clang++"
          CMAKE_C_COMPILER: "/opt/homebrew/opt/llvm@13/bin/clang"
          CMAKE_CXX_COMPILER: "/opt/homebrew/opt/llvm@13/bin/clang++"
        run: |
          export THIS_DIR=$(pwd)
          rm -rf $HOME/runner/webkit-release $HOME/runner/bun-webkit $HOME/runner/bun-webkit $HOME/runner/bun-webkit.tar.gz
          mkdir -p $HOME/runner/webkit-release
          cd $HOME/runner/webkit-release
          cmake  \
            -DPORT="JSCOnly" \
            -DENABLE_STATIC_JSC=ON \
            -DENABLE_SINGLE_THREADED_VM_ENTRY_SCOPE=ON \
            -DCMAKE_BUILD_TYPE=relwithdebuginfo \
            -DUSE_THIN_ARCHIVES=OFF \
            -DENABLE_FTL_JIT=ON \
            -DCMAKE_C_COMPILER=$CMAKE_C_COMPILER \
            -DCMAKE_CXX_COMPILER=$CMAKE_CXX_COMPILER \
            -DCMAKE_C_FLAGS="-fno-exceptions -flto='full' -fvisibility=hidden -fvisibility-inlines-hidden -O3" \
            -DCMAKE_CXX_FLAGS="-fno-exceptions -flto='full' -fvisibility=hidden -fvisibility-inlines-hidden -O3" \
            -G Ninja \
            -DCMAKE_OSX_DEPLOYMENT_TARGET=11.0 \
            -DPTHREAD_JIT_PERMISSIONS_API=1 \
            -DUSE_PTHREAD_JIT_PERMISSIONS_API=ON \
            -DENABLE_REMOTE_INSPECTOR=ON \
            $THIS_DIR \
            $HOME/runner/webkit-release && \
              cmake --build $HOME/runner/webkit-release --config Release --target jsc
          mkdir -p $HOME/runner/bun-webkit/lib $HOME/runner/bun-webkit/include $HOME/runner/bun-webkit/include/JavaScriptCore $HOME/runner/bun-webkit/include/wtf $HOME/runner/bun-webkit/include/bmalloc
          cp $HOME/runner/webkit-release/lib/* $HOME/runner/bun-webkit/lib
          cp -r $HOME/runner/webkit-release/cmakeconfig.h $HOME/runner/bun-webkit/include/cmakeconfig.h
          cp -r $HOME/runner/webkit-release/WTF/Headers/wtf $HOME/runner/bun-webkit/include
          cp -r $HOME/runner/webkit-release/bmalloc/Headers/bmalloc $HOME/runner/bun-webkit/include
          cp $HOME/runner/webkit-release/JavaScriptCore/Headers/JavaScriptCore/* $HOME/runner/bun-webkit/include/JavaScriptCore
          cp $HOME/runner/webkit-release/JavaScriptCore/PrivateHeaders/JavaScriptCore/* $HOME/runner/bun-webkit/include/JavaScriptCore
          cd $HOME/runner/
          tar -czf bun-webkit.tar.gz bun-webkit
          rm -rf bun-webkit
      - uses: actions/upload-artifact@v3
        with:
          name: bun-webkit-macos-aarch64-lto
          path: ${{env.HOME}}/runner/bun-webkit.tar.gz
  macos-aarch64:
    name: macOS AARCH64
    runs-on: macOS-arm64
    timeout-minutes: 90
    strategy:
      matrix:
        os: [macos-11]

    steps:
      - uses: actions/checkout@v3
      - name: Run
        env:
          ICU_INCLUDE_DIRS: /opt/homebrew/opt/icu4c/include
          CC: "/opt/homebrew/opt/llvm@13/bin/clang"
          CXX: "/opt/homebrew/opt/llvm@13/bin/clang++"
          CMAKE_C_COMPILER: "/opt/homebrew/opt/llvm@13/bin/clang"
          CMAKE_CXX_COMPILER: "/opt/homebrew/opt/llvm@13/bin/clang++"
        run: |
          export THIS_DIR=$(pwd)
          rm -rf $HOME/runner/webkit-release $HOME/runner/bun-webkit $HOME/runner/bun-webkit $HOME/runner/bun-webkit.tar.gz
          mkdir -p $HOME/runner/webkit-release
          cd $HOME/runner/webkit-release
          cmake  \
            -DPORT="JSCOnly" \
            -DENABLE_STATIC_JSC=ON \
            -DENABLE_SINGLE_THREADED_VM_ENTRY_SCOPE=ON \
            -DCMAKE_BUILD_TYPE=relwithdebuginfo \
            -DUSE_THIN_ARCHIVES=OFF \
            -DENABLE_FTL_JIT=ON \
            -DCMAKE_C_COMPILER=$CMAKE_C_COMPILER \
            -DCMAKE_CXX_COMPILER=$CMAKE_CXX_COMPILER \
            -DCMAKE_C_FLAGS="-fno-exceptions -fvisibility=hidden -fvisibility-inlines-hidden -O3" \
            -DCMAKE_CXX_FLAGS="-fno-exceptions  -fvisibility=hidden -fvisibility-inlines-hidden -O3" \
            -G Ninja \
            -DCMAKE_OSX_DEPLOYMENT_TARGET=11.0 \
            -DPTHREAD_JIT_PERMISSIONS_API=1 \
            -DUSE_PTHREAD_JIT_PERMISSIONS_API=ON \
            -DENABLE_REMOTE_INSPECTOR=ON \
            $THIS_DIR \
            $HOME/runner/webkit-release && \
              cmake --build $HOME/runner/webkit-release --config Release --target jsc
          mkdir -p $HOME/runner/bun-webkit/lib $HOME/runner/bun-webkit/include $HOME/runner/bun-webkit/include/JavaScriptCore $HOME/runner/bun-webkit/include/wtf $HOME/runner/bun-webkit/include/bmalloc
          cp $HOME/runner/webkit-release/lib/* $HOME/runner/bun-webkit/lib
          cp -r $HOME/runner/webkit-release/cmakeconfig.h $HOME/runner/bun-webkit/include/cmakeconfig.h
          cp -r $HOME/runner/webkit-release/WTF/Headers/wtf $HOME/runner/bun-webkit/include
          cp -r $HOME/runner/webkit-release/bmalloc/Headers/bmalloc $HOME/runner/bun-webkit/include
          cp $HOME/runner/webkit-release/JavaScriptCore/Headers/JavaScriptCore/* $HOME/runner/bun-webkit/include/JavaScriptCore
          cp $HOME/runner/webkit-release/JavaScriptCore/PrivateHeaders/JavaScriptCore/* $HOME/runner/bun-webkit/include/JavaScriptCore
          cd $HOME/runner/
          tar -czf bun-webkit.tar.gz bun-webkit
          rm -rf bun-webkit
      - uses: actions/upload-artifact@v3
        with:
          name: bun-webkit-macos-aarch64
          path: ${{env.HOME}}/runner/bun-webkit.tar.gz

  linux-amd64:
    name: Linux amd64
    runs-on: ${{ matrix.os }}
    timeout-minutes: 90
    strategy:
      matrix:
        os: [ubuntu-18.04]

    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v2
        id: buildx
        with:
          install: true
      - name: Run
        run: |
          rm -rf /tmp/bun-webkit /tmp/bun-webkit.tar.gz
          temp=/tmp bash release.sh
          cd /tmp
          tar -czf bun-webkit.tar.gz bun-webkit
          rm -rf bun-webkit
      - uses: actions/upload-artifact@v3
        with:
          name: bun-webkit-linux-amd64
          path: /tmp/bun-webkit.tar.gz

  release:
    name: release
    runs-on: ubuntu-18.04
    timeout-minutes: 90
    needs:
      - linux-amd64
      - macos-amd64-lto
      - macos-amd64
      - macos-aarch64-lto
      - macos-aarch64
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: bun-webkit-linux-amd64
          path: /tmp/artifacts
      - uses: actions/download-artifact@v3
        with:
          name: bun-webkit-macos-aarch64
          path: /tmp/artifacts
      - uses: actions/download-artifact@v3
        with:
          name: bun-webkit-macos-aarch64-lto
          path: /tmp/artifacts
      - uses: actions/download-artifact@v3
        with:
          name: bun-webkit-macos-amd64
          path: /tmp/artifacts
      - uses: actions/download-artifact@v3
        with:
          name: bun-webkit-macos-amd64-lto
          path: /tmp/artifacts
      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: true
          title: "Latest Build"
          files: |
            - /tmp/artifacts/*.tar.gz

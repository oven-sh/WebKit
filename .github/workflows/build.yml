name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  macos:
    name: macOS
    runs-on: ${{ matrix.runner }}
    timeout-minutes: 90
    strategy:
      matrix:
        include:
          - runner: macos-11
            lto_flag: -flto='full'
            cpu: native
            label: bun-webkit-macos-amd64-lto
            brew_prefix: /usr/local/opt
            march: "-march=native"
          - runner: macos-11
            lto_flag: -flto='full'
            cpu: sandybridge
            label: bun-webkit-macos-amd64-lto-generic
            brew_prefix: /usr/local/opt
            march: "-march=sandybridge"
          - runner: macos-11
            lto_flag: ""
            cpu: sandybridge
            label: bun-webkit-macos-amd64-generic
            brew_prefix: /usr/local/opt
            march: "-march=sandybridge"
          - runner: macos-11
            lto_flag: ""
            cpu: native
            label: bun-webkit-macos-amd64
            brew_prefix: /usr/local/opt
            march: "-march=native"
          - runner: macOS-arm64
            lto_flag: -flto='full'
            cpu: native
            label: bun-webkit-macos-arm64-lto
            brew_prefix: /opt/homebrew/opt
            march: ""
          - runner: macOS-arm64
            lto_flag: ""
            cpu: native
            label: bun-webkit-macos-arm64
            brew_prefix: /opt/homebrew/opt
            march: ""
    steps:
      - uses: actions/checkout@v3
      - name: PATH
        run: |
          echo "${{matrix.brew_prefix}}/llvm@13/bin" >> $GITHUB_PATH
          brew install llvm@13 python icu4c ninja
          brew link llvm@13 --overwrite
      - name: Run
        env:
          ICU_INCLUDE_DIRS: ${{matrix.brew_prefix}}/icu4c/include
          CC: "${{matrix.brew_prefix}}/llvm@13/bin/clang"
          CXX: "${{matrix.brew_prefix}}/llvm@13/bin/clang++"
          CMAKE_C_COMPILER: "${{matrix.brew_prefix}}/llvm@13/bin/clang"
          CMAKE_CXX_COMPILER: "${{matrix.brew_prefix}}/llvm@13/bin/clang++"
        run: |
          export THIS_DIR="$(pwd)"
          rm -rf ${{runner.temp}}/webkit-release ${{runner.temp}}/bun-webkit ${{runner.temp}}/bun-webkit ${{runner.temp}}/bun-webkit.tar.gz
          mkdir -p ${{runner.temp}}/webkit-release
          cd ${{runner.temp}}/webkit-release
          cmake  \
            -DPORT="JSCOnly" \
            -DENABLE_STATIC_JSC=ON \
            -DENABLE_SINGLE_THREADED_VM_ENTRY_SCOPE=ON \
            -DCMAKE_BUILD_TYPE=relwithdebuginfo \
            -DUSE_THIN_ARCHIVES=OFF \
            -DENABLE_FTL_JIT=ON \
            -DCMAKE_C_COMPILER=$CMAKE_C_COMPILER \
            -DCMAKE_CXX_COMPILER=$CMAKE_CXX_COMPILER \
            -DCMAKE_C_FLAGS="-fno-exceptions ${{matrix.lto_flag}} -fvisibility=hidden ${{matrix.march}} -mtune=${{matrix.cpu}} -fvisibility-inlines-hidden -O3" \
            -DCMAKE_CXX_FLAGS="-fno-exceptions ${{matrix.lto_flag}} -fvisibility=hidden ${{matrix.march}} -mtune=${{matrix.cpu}} -fvisibility-inlines-hidden -O3" \
            -G Ninja \
            -DCMAKE_OSX_DEPLOYMENT_TARGET=11.0 \
            -DPTHREAD_JIT_PERMISSIONS_API=1 \
            -DUSE_PTHREAD_JIT_PERMISSIONS_API=ON \
            -DENABLE_REMOTE_INSPECTOR=ON \
            ${THIS_DIR} \
            ${{runner.temp}}/webkit-release && \
              cmake --build ${{runner.temp}}/webkit-release --config Release --target jsc
          mkdir -p ${{runner.temp}}/bun-webkit/lib ${{runner.temp}}/bun-webkit/include ${{runner.temp}}/bun-webkit/include/JavaScriptCore ${{runner.temp}}/bun-webkit/include/wtf ${{runner.temp}}/bun-webkit/include/bmalloc
          cp ${{runner.temp}}/webkit-release/lib/* ${{runner.temp}}/bun-webkit/lib
          cp -r ${{runner.temp}}/webkit-release/cmakeconfig.h ${{runner.temp}}/bun-webkit/include/cmakeconfig.h
          cp -r ${{runner.temp}}/webkit-release/WTF/Headers/wtf ${{runner.temp}}/bun-webkit/include
          cp -r ${{runner.temp}}/webkit-release/ICU/Headers/* ${{runner.temp}}/bun-webkit/include
          cp -r ${{runner.temp}}/webkit-release/bmalloc/Headers/bmalloc ${{runner.temp}}/bun-webkit/include
          cp ${{runner.temp}}/webkit-release/JavaScriptCore/Headers/JavaScriptCore/* ${{runner.temp}}/bun-webkit/include/JavaScriptCore
          cp ${{runner.temp}}/webkit-release/JavaScriptCore/PrivateHeaders/JavaScriptCore/* ${{runner.temp}}/bun-webkit/include/JavaScriptCore
          cd ${{runner.temp}}
          tar -czf bun-webkit.tar.gz bun-webkit
          rm -rf bun-webkit
      - uses: actions/upload-artifact@v3
        with:
          name: ${{matrix.label}}
          path: ${{runner.temp}}/bun-webkit.tar.gz

  linux-amd64:
    name: Linux amd64
    runs-on: ${{ matrix.os }}
    timeout-minutes: 90
    strategy:
      matrix:
        os: [ubuntu-18.04]
        cpu: [native, sandybridge]

    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v2
        id: buildx
        with:
          install: true
      - name: Run
        run: |
          rm -rf ${{runner.temp}}/bun-webkit ${{runner.temp}}/bun-webkit.tar.gz
          cpu=${{matrix.cpu}} temp=${{runner.temp}} bash release.sh
          cd ${{runner.temp}}
          tar -czf bun-webkit.tar.gz bun-webkit
          rm -rf bun-webkit
      - uses: actions/upload-artifact@v3
        if: ${{  matrix.cpu == 'native' }}
        with:
          name: bun-webkit-linux-amd64
          path: ${{runner.temp}}/bun-webkit.tar.gz
      - uses: actions/upload-artifact@v3
        if: ${{ matrix.cpu == 'sandybridge' }}
        with:
          name: bun-webkit-linux-amd64-generic
          path: ${{runner.temp}}/bun-webkit.tar.gz
  linux-arm64:
    name: Linux arm64
    runs-on: linux-arm64
    timeout-minutes: 90
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v2
        id: buildx
        with:
          install: true
      - name: Run
        run: |
          rm -rf ${{runner.temp}}/bun-webkit ${{runner.temp}}/bun-webkit.tar.gz
          temp=${{runner.temp}} bash release.sh
          cd ${{runner.temp}}
          cpu=native tar -czf bun-webkit.tar.gz bun-webkit
          rm -rf bun-webkit
      - uses: actions/upload-artifact@v3
        with:
          name: bun-webkit-linux-arm64
          path: ${{runner.temp}}/bun-webkit.tar.gz

  release:
    name: release
    runs-on: ubuntu-18.04
    timeout-minutes: 90
    needs:
      - linux-amd64
      - linux-arm64
      - macos
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: bun-webkit-linux-amd64
          path: ${{runner.temp}}/bun-webkit-linux-amd64
      - uses: actions/download-artifact@v3
        with:
          name: bun-webkit-linux-amd64-generic
          path: ${{runner.temp}}/bun-webkit-linux-amd64-generic
      - uses: actions/download-artifact@v3
        with:
          name: bun-webkit-linux-arm64
          path: ${{runner.temp}}/bun-webkit-linux-arm64
      - uses: actions/download-artifact@v3
        with:
          name: bun-webkit-macos-arm64
          path: ${{runner.temp}}/bun-webkit-macos-arm64
      - uses: actions/download-artifact@v3
        with:
          name: bun-webkit-macos-arm64-lto
          path: ${{runner.temp}}/bun-webkit-macos-arm64-lto
      - uses: actions/download-artifact@v3
        with:
          name: bun-webkit-macos-amd64-lto-generic
          path: ${{runner.temp}}/bun-webkit-macos-amd64-lto-generic
      - uses: actions/download-artifact@v3
        with:
          name: bun-webkit-macos-amd64-generic
          path: ${{runner.temp}}/bun-webkit-macos-amd64-generic
      - uses: actions/download-artifact@v3
        with:
          name: bun-webkit-macos-amd64
          path: ${{runner.temp}}/bun-webkit-macos-amd64
      - uses: actions/download-artifact@v3
        with:
          name: bun-webkit-macos-amd64-lto
          path: ${{runner.temp}}/bun-webkit-macos-amd64-lto

      - name: Rename files
        run: |
          mv ${{runner.temp}}/bun-webkit-linux-amd64/bun-webkit.tar.gz ${{runner.temp}}/bun-webkit-linux-amd64.tar.gz
          mv ${{runner.temp}}/bun-webkit-linux-amd64-generic/bun-webkit.tar.gz ${{runner.temp}}/bun-webkit-linux-amd64-generic.tar.gz
          mv ${{runner.temp}}/bun-webkit-linux-arm64/bun-webkit.tar.gz  ${{runner.temp}}/bun-webkit-linux-arm64.tar.gz
          mv ${{runner.temp}}/bun-webkit-macos-arm64/bun-webkit.tar.gz ${{runner.temp}}/bun-webkit-macos-arm64.tar.gz
          mv ${{runner.temp}}/bun-webkit-macos-arm64-lto/bun-webkit.tar.gz ${{runner.temp}}/bun-webkit-macos-arm64-lto.tar.gz
          mv ${{runner.temp}}/bun-webkit-macos-amd64/bun-webkit.tar.gz  ${{runner.temp}}/bun-webkit-macos-amd64.tar.gz
          mv ${{runner.temp}}/bun-webkit-macos-amd64-lto/bun-webkit.tar.gz ${{runner.temp}}/bun-webkit-macos-amd64-lto.tar.gz
          mv ${{runner.temp}}/bun-webkit-macos-amd64-lto-generic/bun-webkit.tar.gz ${{runner.temp}}/bun-webkit-macos-amd64-lto-generic.tar.gz
          mv ${{runner.temp}}/bun-webkit-macos-amd64-generic/bun-webkit.tar.gz ${{runner.temp}}/bun-webkit-macos-amd64-generic.tar.gz
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          prerelease: true
          generate_release_notes: true
          tag_name: "latest"
          files: |
            ${{runner.temp}}/bun-webkit-linux-amd64.tar.gz
            ${{runner.temp}}/bun-webkit-linux-amd64-generic.tar.gz
            ${{runner.temp}}/bun-webkit-linux-arm64.tar.gz
            ${{runner.temp}}/bun-webkit-macos-arm64.tar.gz
            ${{runner.temp}}/bun-webkit-macos-arm64-lto.tar.gz
            ${{runner.temp}}/bun-webkit-macos-amd64.tar.gz
            ${{runner.temp}}/bun-webkit-macos-amd64-lto.tar.gz
            ${{runner.temp}}/bun-webkit-macos-amd64-lto-generic
            ${{runner.temp}}/bun-webkit-macos-amd64-generic

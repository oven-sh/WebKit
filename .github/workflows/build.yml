name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  macos:
    name: macOS
    runs-on: ${{ matrix.runner }}
    timeout-minutes: 90
    strategy:
      matrix:
        include:
          - runner: macos-11
            lto_flag: -flto='full'
            cpu: haswell
            label: bun-webkit-macos-amd64-lto
            brew_prefix: /usr/local/opt
            package_json_arch: "x64"
          - runner: macos-11
            lto_flag: ""
            cpu: haswell
            label: bun-webkit-macos-amd64
            brew_prefix: /usr/local/opt
            package_json_arch: "x64"
          - runner: macOS-arm64
            lto_flag: -flto='full'
            cpu: native
            label: bun-webkit-macos-arm64-lto
            brew_prefix: /opt/homebrew/opt
            package_json_arch: "arm64"
          - runner: macOS-arm64
            lto_flag: ""
            cpu: native
            label: bun-webkit-macos-arm64
            brew_prefix: /opt/homebrew/opt
            package_json_arch: "arm64"
    steps:
      - uses: actions/checkout@v3
      - name: PATH
        run: |
          echo "${{matrix.brew_prefix}}/llvm@13/bin" >> $GITHUB_PATH
          brew install llvm@13 python icu4c ninja
          brew link llvm@13 --overwrite
      - name: Run
        env:
          ICU_INCLUDE_DIRS: ${{matrix.brew_prefix}}/icu4c/include
          CC: "${{matrix.brew_prefix}}/llvm@13/bin/clang"
          CXX: "${{matrix.brew_prefix}}/llvm@13/bin/clang++"
          CMAKE_C_COMPILER: "${{matrix.brew_prefix}}/llvm@13/bin/clang"
          CMAKE_CXX_COMPILER: "${{matrix.brew_prefix}}/llvm@13/bin/clang++"
        run: |
          export THIS_DIR="$(pwd)"
          rm -rf $RUNNER_TEMP/webkit-release $RUNNER_TEMP/bun-webkit $RUNNER_TEMP/bun-webkit $RUNNER_TEMP/bun-webkit.tar.gz
          mkdir -p $RUNNER_TEMP/webkit-release
          cd $RUNNER_TEMP/webkit-release
          cmake  \
            -DPORT="JSCOnly" \
            -DENABLE_STATIC_JSC=ON \
            -DENABLE_SINGLE_THREADED_VM_ENTRY_SCOPE=ON \
            -DCMAKE_BUILD_TYPE=Release \
            -DUSE_THIN_ARCHIVES=OFF \
            -DENABLE_FTL_JIT=ON \
            -DCMAKE_C_COMPILER="$CMAKE_C_COMPILER" \
            -DCMAKE_CXX_COMPILER="$CMAKE_CXX_COMPILER" \
            -DCMAKE_C_FLAGS="-fno-exceptions ${{matrix.lto_flag}} -fvisibility=hidden -mtune=${{matrix.cpu}} -fvisibility-inlines-hidden -O3" \
            -DCMAKE_CXX_FLAGS="-fno-exceptions ${{matrix.lto_flag}} -fvisibility=hidden -mtune=${{matrix.cpu}} -fvisibility-inlines-hidden -O3" \
            -G Ninja \
            -DCMAKE_OSX_DEPLOYMENT_TARGET=11.0 \
            -DPTHREAD_JIT_PERMISSIONS_API=1 \
            -DUSE_PTHREAD_JIT_PERMISSIONS_API=ON \
            -DENABLE_REMOTE_INSPECTOR=ON \
            $THIS_DIR \
            $RUNNER_TEMP/webkit-release && \
              cmake --build $RUNNER_TEMP/webkit-release --config Release --target jsc
          mkdir -p $RUNNER_TEMP/bun-webkit/lib $RUNNER_TEMP/bun-webkit/include $RUNNER_TEMP/bun-webkit/include/JavaScriptCore $RUNNER_TEMP/bun-webkit/include/wtf $RUNNER_TEMP/bun-webkit/include/bmalloc
          cp $RUNNER_TEMP/webkit-release/lib/* $RUNNER_TEMP/bun-webkit/lib
          cp -r $RUNNER_TEMP/webkit-release/cmakeconfig.h $RUNNER_TEMP/bun-webkit/include/cmakeconfig.h
          echo "#define BUN_WEBKIT_VERSION \"${{github.sha}}\"" >> $RUNNER_TEMP/bun-webkit/include/cmakeconfig.h
          cp -r $RUNNER_TEMP/webkit-release/WTF/Headers/wtf $RUNNER_TEMP/bun-webkit/include
          cp -r $RUNNER_TEMP/webkit-release/ICU/Headers/* $RUNNER_TEMP/bun-webkit/include
          cp -r $RUNNER_TEMP/webkit-release/bmalloc/Headers/bmalloc $RUNNER_TEMP/bun-webkit/include
          cp $RUNNER_TEMP/webkit-release/JavaScriptCore/Headers/JavaScriptCore/* $RUNNER_TEMP/bun-webkit/include/JavaScriptCore
          cp $RUNNER_TEMP/webkit-release/JavaScriptCore/PrivateHeaders/JavaScriptCore/* $RUNNER_TEMP/bun-webkit/include/JavaScriptCore
          mkdir -p $RUNNER_TEMP/bun-webkit/Source/JavaScriptCore/Scripts
          cp $THIS_DIR/Source/JavaScriptCore/Scripts/generate-js-builtins.py $RUNNER_TEMP/bun-webkit/Source/JavaScriptCore/Scripts
          cp $THIS_DIR/Source/JavaScriptCore/create_hash_table $RUNNER_TEMP/bun-webkit/Source/JavaScriptCore
          echo '{ "name": "${{matrix.label}}", "version": "0.0.1+${{github.sha}}", "os": "darwin", "arch": ["${{matrix.package_json_arch}}"], "repository": "https://github.com/${{github.repository}}" }' > $RUNNER_TEMP/bun-webkit/package.json
          cd $RUNNER_TEMP
          tar -czf bun-webkit.tar.gz bun-webkit
      - uses: actions/upload-artifact@v3
        with:
          name: ${{matrix.label}}
          path: ${{runner.temp}}/bun-webkit.tar.gz

  linux:
    name: Linux
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        include:
          - lto_flag: "-flto='full'"
            label: bun-webkit-linux-arm64-lto
            os: linux-arm64
            package_json_arch: "arm64"
          - lto_flag: ""
            label: bun-webkit-linux-arm64
            os: linux-arm64
            package_json_arch: "arm64"
          - lto_flag: "-flto='full'"
            label: bun-webkit-linux-amd64-lto
            os: ubuntu-18.04
            package_json_arch: "x64"
          - lto_flag: ""
            label: bun-webkit-linux-amd64
            os: ubuntu-18.04
            package_json_arch: "x64"

    timeout-minutes: 90
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v2
        id: buildx
        with:
          install: true
      - name: Run
        run: |
          rm -rf ${{runner.temp}}/bun-webkit ${{runner.temp}}/bun-webkit.tar.gz
          CPU="native" cpu=native LTO_FLAG=${{matrix.lto_flag}} temp=${{runner.temp}} bash release.sh
          cd ${{runner.temp}}
          echo "#define BUN_WEBKIT_VERSION \"${{github.sha}}\"" >> bun-webkit/include/cmakeconfig.h
          echo '{ "name": "${{matrix.label}}", "version": "0.0.1+${{github.sha}}", "os": "linux", "arch": ["${{matrix.package_json_arch}}"], "repository": "https://github.com/${{github.repository}}" }' > bun-webkit/package.json
          tar -czf bun-webkit.tar.gz bun-webkit
          rm -rf bun-webkit
      - uses: actions/upload-artifact@v3
        with:
          name: ${{matrix.label}}
          path: ${{runner.temp}}/bun-webkit.tar.gz

  release:
    name: release
    runs-on: ubuntu-18.04
    timeout-minutes: 90
    needs:
      - linux
      - macos
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: bun-webkit-linux-amd64
          path: ${{runner.temp}}/bun-webkit-linux-amd64
      - uses: actions/download-artifact@v3
        with:
          name: bun-webkit-linux-arm64
          path: ${{runner.temp}}/bun-webkit-linux-arm64
      - uses: actions/download-artifact@v3
        with:
          name: bun-webkit-macos-arm64
          path: ${{runner.temp}}/bun-webkit-macos-arm64
      - uses: actions/download-artifact@v3
        with:
          name: bun-webkit-macos-arm64-lto
          path: ${{runner.temp}}/bun-webkit-macos-arm64-lto
      - uses: actions/download-artifact@v3
        with:
          name: bun-webkit-macos-amd64
          path: ${{runner.temp}}/bun-webkit-macos-amd64
      - uses: actions/download-artifact@v3
        with:
          name: bun-webkit-macos-amd64-lto
          path: ${{runner.temp}}/bun-webkit-macos-amd64-lto
      - uses: actions/download-artifact@v3
        with:
          name: bun-webkit-linux-amd64-lto
          path: ${{runner.temp}}/bun-webkit-linux-amd64-lto
      - uses: actions/download-artifact@v3
        with:
          name: bun-webkit-linux-arm64-lto
          path: ${{runner.temp}}/bun-webkit-linux-arm64-lto

      - name: Rename files
        run: |
          mv ${{runner.temp}}/bun-webkit-linux-amd64/bun-webkit.tar.gz ${{runner.temp}}/bun-webkit-linux-amd64.tar.gz
          mv ${{runner.temp}}/bun-webkit-linux-arm64/bun-webkit.tar.gz  ${{runner.temp}}/bun-webkit-linux-arm64.tar.gz
          mv ${{runner.temp}}/bun-webkit-macos-arm64/bun-webkit.tar.gz ${{runner.temp}}/bun-webkit-macos-arm64.tar.gz
          mv ${{runner.temp}}/bun-webkit-macos-arm64-lto/bun-webkit.tar.gz ${{runner.temp}}/bun-webkit-macos-arm64-lto.tar.gz
          mv ${{runner.temp}}/bun-webkit-macos-amd64/bun-webkit.tar.gz  ${{runner.temp}}/bun-webkit-macos-amd64.tar.gz
          mv ${{runner.temp}}/bun-webkit-macos-amd64-lto/bun-webkit.tar.gz ${{runner.temp}}/bun-webkit-macos-amd64-lto.tar.gz
          mv ${{runner.temp}}/bun-webkit-linux-arm64-lto/bun-webkit.tar.gz ${{runner.temp}}/bun-webkit-linux-arm64-lto.tar.gz
          mv ${{runner.temp}}/bun-webkit-linux-amd64-lto/bun-webkit.tar.gz ${{runner.temp}}/bun-webkit-linux-amd64-lto.tar.gz
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          prerelease: true
          generate_release_notes: true
          tag_name: "autobuild-${{github.sha}}"
          files: |
            ${{runner.temp}}/bun-webkit-linux-amd64-lto.tar.gz
            ${{runner.temp}}/bun-webkit-linux-arm64-lto.tar.gz
            ${{runner.temp}}/bun-webkit-linux-amd64.tar.gz
            ${{runner.temp}}/bun-webkit-linux-arm64.tar.gz
            ${{runner.temp}}/bun-webkit-macos-arm64.tar.gz
            ${{runner.temp}}/bun-webkit-macos-arm64-lto.tar.gz
            ${{runner.temp}}/bun-webkit-macos-amd64.tar.gz
            ${{runner.temp}}/bun-webkit-macos-amd64-lto.tar.gz
      - name: Canary
        uses: softprops/action-gh-release@v1
        with:
          prerelease: true
          generate_release_notes: true
          tag_name: "canary"
          files: |
            ${{runner.temp}}/bun-webkit-linux-amd64-lto.tar.gz
            ${{runner.temp}}/bun-webkit-linux-arm64-lto.tar.gz
            ${{runner.temp}}/bun-webkit-linux-amd64.tar.gz
            ${{runner.temp}}/bun-webkit-linux-arm64.tar.gz
            ${{runner.temp}}/bun-webkit-macos-arm64.tar.gz
            ${{runner.temp}}/bun-webkit-macos-arm64-lto.tar.gz
            ${{runner.temp}}/bun-webkit-macos-amd64.tar.gz
            ${{runner.temp}}/bun-webkit-macos-amd64-lto.tar.gz


PASS Constructing a CSSHWB with degrees for the hue works as intended.
PASS CSSHWB.h can be updated with a degrees.
PASS Constructing a CSSHWB with radians for the hue works as intended.
PASS CSSHWB.h can be updated with a radians.
PASS Constructing a CSSHWB with gradians for the hue works as intended.
PASS CSSHWB.h can be updated with a gradians.
PASS Constructing a CSSHWB with a number for hue throws a type error.
FAIL Constructing a CSSHWB with css pixels for hue throws a type error. assert_throws_js: function "() => new CSSHWB(hue, 0, 0)" did not throw
PASS Constructing a CSSHWB with undefined for hue throws a type error.
FAIL CSSHWB can be constructed from three numbers and will get an alpha of 100%. assert_equals: expected "CSSUnitValue" but got "Number"
FAIL CSSHWB can be constructed from four numbers. assert_equals: expected "CSSUnitValue" but got "Number"
FAIL Constructing a CSSHWB with CSS.number for s, l or alpha throws a TypeError assert_throws_js: function "() => new CSSHWB(CSS.deg(0), CSS.number(1), 0, 0)" did not throw
FAIL Updating a CSSHWB with CSS.number for w throws a TypeError assert_throws_js: function "() => result[attr] = CSS.number(1)" did not throw
FAIL CSSHWB.w can be updated to a number. assert_equals: expected "CSSUnitValue" but got "Number"
PASS CSSHWB.w can be updated with a CSS percent.
FAIL Updating a CSSHWB with CSS.number for b throws a TypeError assert_throws_js: function "() => result[attr] = CSS.number(1)" did not throw
FAIL CSSHWB.b can be updated to a number. assert_equals: expected "CSSUnitValue" but got "Number"
PASS CSSHWB.b can be updated with a CSS percent.
FAIL Updating a CSSHWB with CSS.number for alpha throws a TypeError assert_throws_js: function "() => result[attr] = CSS.number(1)" did not throw
FAIL CSSHWB.alpha can be updated to a number. assert_equals: expected "CSSUnitValue" but got "Number"
PASS CSSHWB.alpha can be updated with a CSS percent.

